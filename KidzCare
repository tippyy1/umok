import streamlit as st
import re
from spellchecker import SpellChecker

st.set_page_config(page_title="KidzCareHub", page_icon="üè•", layout="wide")

st.title("üåü Welcome to KidzCareHub! üåü")

# Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

spell = SpellChecker()

def preprocess_input(text):
    # Abbreviations dictionary
    abbreviations = {
        "fvr": "fever",
        "doc": "doctor",
        "temp": "temperature",
        "vax": "vaccination",
        "meds": "medications",
        "sym": "symptoms",
        "dev": "development",
        "nutri": "nutrition",
        "allrg": "allergy",
        "emrg": "emergency",
    }
    for abbr, full in abbreviations.items():
        text = re.sub(r'\b' + re.escape(abbr) + r'\b', full, text, flags=re.IGNORECASE)
    
    # Correct spelling errors
    words = text.split()
    corrected_text = " ".join([spell.correction(word) if spell.unknown([word]) else word for word in words])
    
    # Handle curse words
    curse_words = ["damn", "hell", "shit", "fuck"]
    for curse in curse_words:
        corrected_text = re.sub(r'\b' + re.escape(curse) + r'\b', '****', corrected_text, flags=re.IGNORECASE)
    
    return corrected_text

# Define pairs of patterns and responses
pairs = [
    (r"fever|temperature", "A fever is generally considered a temperature of 100.4¬∞F (38¬∞C) or higher. Monitor their temperature, ensure they stay hydrated, and use fever-reducing medications if necessary. Consult a doctor if the fever persists or is very high."),
    (r"vaccination|vax", "Vaccinations are crucial for child health. The CDC recommends vaccinations like Hepatitis B, DTaP, Hib, IPV, MMR, Varicella, and others starting at birth and continuing through childhood. Always consult with your pediatrician for the appropriate vaccination schedule."),
    (r"nutrition|diet|food", "A balanced diet is essential for child growth. Include fruits, vegetables, whole grains, lean proteins, and dairy. Limit sugary and processed foods. Consult a pediatrician or nutritionist for specific dietary advice based on your child's age and health status."),
    (r"development|milestone", "Child development involves physical, cognitive, social, and emotional milestones. These can include rolling over, sitting up, walking, talking, and more complex skills as they grow. If you're concerned about your child's development, consult your pediatrician."),
    (r"safety|childproof", "Childproofing your home is crucial. This includes securing furniture, covering electrical outlets, locking away harmful substances, and using safety gates. Always supervise young children and teach them about potential dangers as they grow."),
    (r"sleep|bedtime", "Adequate sleep is vital for child health and development. Newborns need 14-17 hours, infants 12-15 hours, toddlers 11-14 hours, and preschoolers 10-13 hours of sleep per day. Establish a consistent bedtime routine to promote good sleep habits."),
    (r"emergency|urgent", "For medical emergencies, call 911 immediately. Signs of emergency include difficulty breathing, severe bleeding, loss of consciousness, or signs of extreme pain. Always err on the side of caution when it comes to your child's health."),
    (r"allergy|allergic", "Common childhood allergies include food allergies (like nuts, eggs, milk), environmental allergies (like pollen, dust), and skin allergies. If you suspect your child has an allergy, consult an allergist for proper diagnosis and management."),
    (r"medication|medicine", "Always follow your doctor's or pharmacist's instructions when giving medication to children. Use the correct dosage based on weight and age. Never give adult medications to children unless specifically instructed by a healthcare professional."),
]

def respond(user_input):
    user_input = user_input.lower()
    for pattern, response in pairs:
        if re.search(pattern, user_input):
            return response
    return "I'm not sure about that specific topic. Could you try asking about common pediatric care topics like health, nutrition, development, or safety? If you have specific medical concerns, please consult with a healthcare professional."

# Display chat messages from history on app rerun
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# React to user input
if prompt := st.chat_input("Ask a question about pediatric care"):
    # Preprocess the input
    preprocessed_prompt = preprocess_input(prompt)
    
    # Display user message in chat message container
    st.chat_message("user").markdown(preprocessed_prompt)
    # Add user message to chat history
    st.session_state.messages.append({"role": "user", "content": preprocessed_prompt})

    response = respond(preprocessed_prompt)
    # Display assistant response in chat message container
    with st.chat_message("assistant"):
        st.markdown(f"KidzCareHub: {response}")
    # Add assistant response to chat history
    st.session_state.messages.append({"role": "assistant", "content": f"KidzCareHub: {response}"})

# Sidebar with additional information
st.sidebar.title("About KidzCareHub")
st.sidebar.info(
    "KidzCareHub is your comprehensive digital pediatric care assistant. "
    "Ask questions about child health, development, nutrition, safety, and more. "
    "Remember, this app provides general information and should not replace professional medical advice."
)

# Custom CSS for enhanced design
st.markdown(
    """
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap');

    .stApp {
        background: linear-gradient(135deg, #FFD1DC 0%, #FFF0F5 100%);
        font-family: 'Nunito', sans-serif;
    }
    h1 {
        color: #FF1493;
        text-align: center;
        font-size: 3.5em;
        margin-bottom: 30px;
        text-shadow: 2px 2px 4px rgba(255,20,147,0.3);
    }
    .stChatMessage {
        background-color: rgba(255, 255, 255, 0.9) !important;
        border-radius: 20px !important;
        padding: 20px !important;
        margin-bottom: 20px !important;
        box-shadow: 0 6px 12px rgba(255,20,147,0.2);
        border: 3px solid #FF69B4;
        transition: all 0.3s ease;
    }
    .stChatMessage:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(255,20,147,0.3);
    }
    .stChatMessage [data-testid="stChatMessageContent"] {
        background-color: transparent !important;
        color: #8B4513;
        font-size: 1.2em;
        line-height: 1.6;
    }
    .stChatMessage [data-testid="stChatMessageAvatar"] {
        background-color: #FF1493 !important;
    }
    .stTextInput > div > div > input {
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 25px;
        padding: 15px 25px;
        font-size: 1.2em;
        border: 3px solid #FF69B4;
        transition: all 0.3s ease;
    }
    .stTextInput > div > div > input:focus {
        border-color: #FF1493;
        box-shadow: 0 0 15px rgba(255,20,147,0.5);
    }
    .stSidebar {
        background-color: rgba(255, 192, 203, 0.3);
        padding: 30px;
        border-radius: 20px;
    }
    .stButton > button {
        background-color: #FF1493;
        color: white;
        border-radius: 25px;
        padding: 12px 25px;
        font-size: 1.2em;
        border: none;
        box-shadow: 0 6px 12px rgba(255,20,147,0.3);
        transition: all 0.3s ease;
    }
    .stButton > button:hover {
        background-color: #FF69B4;
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(255,20,147,0.4);
    }
    </style>
    """,
    unsafe_allow_html=True
)
